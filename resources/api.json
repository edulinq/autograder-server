{
    "endpoints": {
        "courses/admin/update": {
            "description": "Update an existing course.",
            "request-type": "*admin.UpdateRequest",
            "response-type": "*admin.UpdateResponse"
        },
        "courses/assignments/get": {
            "description": "Get the information for a course assignment.",
            "request-type": "*assignments.GetRequest",
            "response-type": "*assignments.GetResponse"
        },
        "courses/assignments/list": {
            "description": "List the assignments in the course.",
            "request-type": "*assignments.ListRequest",
            "response-type": "*assignments.ListResponse"
        },
        "courses/assignments/submissions/analysis/individual": {
            "description": "Get the result of a individual analysis for the specified submissions.",
            "request-type": "*analysis.IndividualRequest",
            "response-type": "*analysis.IndividualResponse"
        },
        "courses/assignments/submissions/analysis/pairwise": {
            "description": "Get the result of a pairwise analysis for the specified submissions.",
            "request-type": "*analysis.PairwiseRequest",
            "response-type": "*analysis.PairwiseResponse"
        },
        "courses/assignments/submissions/fetch/course/attempts": {
            "description": "Get all recent submissions and grading information for this assignment.",
            "request-type": "*course.FetchCourseAttemptsRequest",
            "response-type": "*course.FetchCourseAttemptsResponse"
        },
        "courses/assignments/submissions/fetch/course/scores": {
            "description": "Get a summary of the most recent scores for this assignment.",
            "request-type": "*course.FetchCourseScoresRequest",
            "response-type": "*course.FetchCourseScoresResponse"
        },
        "courses/assignments/submissions/fetch/user/attempt": {
            "description": "Get a submission along with all grading information.",
            "request-type": "*user.FetchUserAttemptRequest",
            "response-type": "*user.FetchUserAttemptResponse"
        },
        "courses/assignments/submissions/fetch/user/attempts": {
            "description": "Get all submission attempts made by a user along with all grading information.",
            "request-type": "*user.FetchUserAttemptsRequest",
            "response-type": "*user.FetchUserAttemptsResponse"
        },
        "courses/assignments/submissions/fetch/user/history": {
            "description": "Get a summary of the submissions for this assignment.",
            "request-type": "*user.FetchUserHistoryRequest",
            "response-type": "*user.FetchUserHistoryResponse"
        },
        "courses/assignments/submissions/fetch/user/peek": {
            "description": "Get a copy of the grading report for the specified submission. Does not submit a new submission.",
            "request-type": "*user.FetchUserPeekRequest",
            "response-type": "*user.FetchUserPeekResponse"
        },
        "courses/assignments/submissions/remove": {
            "description": "Remove a specified submission. Defaults to the most recent submission.",
            "request-type": "*submissions.RemoveRequest",
            "response-type": "*submissions.RemoveResponse"
        },
        "courses/assignments/submissions/submit": {
            "description": "Submit an assignment submission to the autograder.",
            "request-type": "*submissions.SubmitRequest",
            "response-type": "*submissions.SubmitResponse"
        },
        "courses/lms/scores/upload": {
            "description": "Perform a full scoring and upload scores to the course's LMS.",
            "request-type": "*scores.UploadRequest",
            "response-type": "*scores.UploadResponse"
        },
        "courses/stats/query": {
            "description": "Query metrics for a specific course.\nOnly the context course can be queried for, the target-course field will be ignored for this endpoint.",
            "request-type": "*stats.QueryRequest",
            "response-type": "*stats.QueryResponse"
        },
        "courses/upsert/filespec": {
            "description": "Upsert a course using a filespec.",
            "request-type": "*upsert.FileSpecRequest",
            "response-type": "*upsert.UpsertResponse"
        },
        "courses/upsert/zip": {
            "description": "Upsert a course using a zip file.",
            "request-type": "*upsert.ZipFileRequest",
            "response-type": "*upsert.UpsertResponse"
        },
        "courses/users/drop": {
            "description": "Drop a user from the course.",
            "request-type": "*users.DropRequest",
            "response-type": "*users.DropResponse"
        },
        "courses/users/enroll": {
            "description": "Enroll one or more users to the course.",
            "request-type": "*users.EnrollRequest",
            "response-type": "*users.EnrollResponse"
        },
        "courses/users/get": {
            "description": "Get the information for a course user.",
            "request-type": "*users.GetRequest",
            "response-type": "*users.GetResponse"
        },
        "courses/users/list": {
            "description": "List the users in the course.",
            "request-type": "*users.ListRequest",
            "response-type": "*users.ListResponse"
        },
        "lms/upload/scores": {
            "description": "Upload scores from a tab-separated file to the course's LMS.\nThe file should not have headers, and should have two columns: email and score.",
            "request-type": "*upload.UploadScoresRequest",
            "response-type": "*upload.UploadScoresResponse"
        },
        "lms/user/get": {
            "description": "Get information for an LMS user.",
            "request-type": "*user.UserGetRequest",
            "response-type": "*user.UserGetResponse"
        },
        "logs/query": {
            "description": "Query log entries from the autograder server.",
            "request-type": "*logs.QueryRequest",
            "response-type": "*logs.QueryResponse"
        },
        "metadata/describe": {
            "description": "Describe all endpoints on the server.",
            "request-type": "*metadata.DescribeRequest",
            "response-type": "*metadata.DescribeResponse"
        },
        "stats/apirequest/query": {
            "request-type": "*apirequest.QueryRequest",
            "response-type": "*apirequest.QueryResponse",
            "description": "Query the API request stats for the server."
        },
        "stats/system/query": {
            "description": "Query the system stats for the server.",
            "request-type": "*system.QueryRequest",
            "response-type": "*system.QueryResponse"
        },
        "system/stacks": {
            "description": "Get stack traces for all the currently running routines (threads) on the server.",
            "request-type": "*system.StacksRequest",
            "response-type": "*system.StacksResponse"
        },
        "users/auth": {
            "description": "Authenticate as a user.",
            "request-type": "*users.AuthRequest",
            "response-type": "*users.AuthResponse"
        },
        "users/get": {
            "description": "Get the information for a server user.",
            "request-type": "*users.GetRequest",
            "response-type": "*users.GetResponse"
        },
        "users/list": {
            "description": "List the users on the server.",
            "request-type": "*users.ListRequest",
            "response-type": "*users.ListResponse"
        },
        "users/password/change": {
            "description": "Change your password to the one provided.",
            "request-type": "*password.PasswordChangeRequest",
            "response-type": "*password.PasswordChangeResponse"
        },
        "users/password/reset": {
            "description": "Reset to a random password that will be emailed to you.",
            "request-type": "*password.PasswordResetRequest",
            "response-type": "*password.PasswordResetResponse"
        },
        "users/remove": {
            "description": "Remove a user from the server.",
            "request-type": "*users.RemoveRequest",
            "response-type": "*users.RemoveResponse"
        },
        "users/tokens/create": {
            "description": "Create a new authentication token.",
            "request-type": "*tokens.TokensCreateRequest",
            "response-type": "*tokens.TokensCreateResponse"
        },
        "users/tokens/delete": {
            "description": "Delete an authentication token.",
            "request-type": "*tokens.TokensDeleteRequest",
            "response-type": "*tokens.TokensDeleteResponse"
        },
        "users/upsert": {
            "description": "Upsert one or more users to the server (update if exists, insert otherwise).",
            "request-type": "*users.UpsertRequest",
            "response-type": "*users.UpsertResponse"
        }
    }
}
